name: 'electron-build'

on:
  push:
    tags:
      - v3.*
    branches: [feature/*]

jobs:
  release:
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    environment: MACOS

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
#        os: [windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm

      - name: Setup node js runtime
        uses: actions/setup-node@v4
        with:
          node-version: 18.16.1

      - uses: actions/setup-python@v4 #Install awscli on all platform
        with:
          python-version: '3.10'

      - name: Install setuptools Package
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pip
          pip install setuptools

      - name: Update package.json
        if: startsWith(matrix.os, 'macos')
        run: |
          jq '.build.mac.notarize.teamId = "${{ secrets.APPLE_TEAM_ID }}"' package.json > package_temp.json
          mv package_temp.json package.json

      - name: Install cpx
        if: startsWith(matrix.os, 'windows-latest')
        run: npm install -g cpx

      - name: Build and pack windows app
        if: startsWith(matrix.os, 'windows-latest')
        uses: samuelmeuli/action-electron-builder@v1
        with:
          build_script_name: pack:win
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      - name: Build and pack mac app
        if: startsWith(matrix.os, 'macos')
        uses: samuelmeuli/action-electron-builder@v1
        with:
          build_script_name: pack
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
        env:
          # macOS for notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
#          APPLE_ID: ${{ secrets.APPLE_ID }}
#          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }

      - name: Output Notarization Error Log
        if: failure() && startsWith(matrix.os, 'macos')
        run: |
          echo "Notarization failed. Outputting notarization-error.log..."
          cat /Users/runner/work/klayr-desktop/klayr-desktop/notarization-error.log
